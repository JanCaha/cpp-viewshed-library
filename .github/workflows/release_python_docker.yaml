name: Docker release

on: push

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  PACKAGE: viewshed
  COMPILER: c++
        
jobs:

  Create-deb-file-library:

    runs-on: ubuntu-latest

    steps:

        - name: Checkout
          uses: actions/checkout@v3
          with:
            submodules: true
        
        - name: Set env
          id: version
          run: |
            echo "VERSION=$(grep "project(" CMakeLists.txt | grep -E -o -e "[0-9\.]+")" >> $GITHUB_ENV
            echo "VERSION=$(grep "project(" CMakeLists.txt | grep -E -o -e "[0-9\.]+")" >> $GITHUB_OUTPUT
        
        - name: Print Version
          run: |
            echo "-----"
            echo "Project Version"
            echo ${PACKAGE}
            echo ${VERSION}
            echo ${{steps.version.outputs.VERSION}}
            echo "-----"
            
        - name: Update and Upgrade
          run: |
            sudo apt update
            sudo apt install ninja-build doxygen libgtest-dev libgmock-dev clang

        - name: Install Qt
          uses: jurplel/install-qt-action@v3
          with:
            version: '5.15.2'
            host: 'linux'
        
        - name: Install GDAL
          run: |
            sudo apt-get -y install gdal-bin libgdal-dev
        
        - uses: robinraju/release-downloader@v1.8
          with:
            repository: "JanCaha/cpp-simplerasters"
            latest: true
            fileName: "*.deb"
            tarBall: false
            zipBall: false
  
        - name: Install and remove artifact
          run: |
            sudo apt install ./simplerasters*.deb
            rm simplerasters*

        - name: Configure
          run: | 
            mkdir build
            cmake \
              -S. \
              -Bbuild \
              -G Ninja \
              -DCMAKE_CXX_COMPILER=${COMPILER} \
              -DCMAKE_BUILD_TYPE=Release \
              -DPACK_DEB:bool=on \
              -DBUILD_DOCUMENTATION:bool=on \
              -DBUILD_TESTS:bool=on \
              -DCELL_EVENT_DATA_FLOAT:bool=on \
              -DOUTPUT_RASTER_DATA_FLOAT:bool=on

        - name: Build DEB
          run: | 
            cmake --build build --config Release --target all
            cmake --build build --config Release --target pack_viewshed_library_deb
        
        - name: Install from DEB
          run: |
            sudo apt install _packages/viewshed_*.deb
            
        - name: Upload DEB file as artifact
          uses: actions/upload-artifact@v3
          with:
            name: viewshed
            path: _packages/viewshed_*.deb
        
        - name: Move deb file
          run: |
            mv _packages/viewshed_*.deb .      

        - uses: actions/setup-python@v4
          with:
            python-version: "3.11"
            architecture: 'x64'
        
        - name: Install pip packages
          run: |
            pip install wheel py-build-cmake build

        - uses: actions/checkout@v4
          with:
            repository: 'JanCaha/viewshed-library-pybind11'
            path: 'python-package'
            submodules: true
        
        - name: Install package
          run: |
            cd python-package
            python -m build .    
      
        - uses: actions/upload-artifact@v3
          with:
            name: python-viewshed
            path: python-package/dist/viewshed*.whl

  Release-Docker:

    runs-on: ubuntu-latest

    needs: Create-deb-file-library

    steps:

        - name: Checkout
          uses: actions/checkout@v3

        - name: Download artifact
          uses: actions/download-artifact@v3
          with:
            name: viewshed

        - name: Copy viewshed to docker folder
          run: |
            mkdir docker/install
            mv viewshed_*.deb docker/install/    

        - uses: robinraju/release-downloader@v1.8
          with:
            repository: "JanCaha/cpp-simplerasters"
            latest: true
            fileName: "*.deb"
            tarBall: false
            zipBall: false
         
        - name: Copy simplerasters to docker folder
          run: |
            mv simplerasters_*.deb docker/install/ 
        
        - name: Download artifact
          uses: actions/download-artifact@v3
          with:
            name: python-viewshed
        
        - name: print files
          run: |
            ls -l

        # - name: Log in to Docker Hub
        #   uses: docker/login-action@v2
        #   with:
        #     username: ${{ secrets.DOCKER_USERNAME }}
        #     password: ${{ secrets.DOCKER_PASSWORD }}
        
        # - name: Set Env and GA Output
        #   id: version
        #   run: |
        #     echo "VERSION=$(grep "project(" CMakeLists.txt | grep -E -o -e "[0-9\.]+")" >> $GITHUB_ENV
        #     echo "VERSION=$(grep "project(" CMakeLists.txt | grep -E -o -e "[0-9\.]+")" >> $GITHUB_OUTPUT
        
        # - name: Build and push Docker image version
        #   uses: docker/build-push-action@v4
        #   with:
        #     file: docker/Dockerfile
        #     context: docker/
        #     push: true
        #     tags: "cahik/viewshed:v${{steps.version.outputs.VERSION}}"

        # - name: Build and push Docker image latest
        #   uses: docker/build-push-action@v4
        #   with:
        #     file: docker/Dockerfile
        #     context: docker/
        #     push: true
        #     tags: cahik/viewshed:latest
        
        # - name: Build and push Docker image version with Python
        #   uses: docker/build-push-action@v4
        #   with:
        #     file: docker/viewshed_install_from_ppa.dockerfile
        #     context: docker/
        #     push: true
        #     tags: "cahik/viewshed:v${{steps.version.outputs.VERSION}}-python"

        # - name: Build and push Docker image latest with Python
        #   uses: docker/build-push-action@v4
        #   with:
        #     file: docker/viewshed_install_from_ppa.dockerfile
        #     context: docker/
        #     push: true
        #     tags: cahik/viewshed:latest-python
  
  