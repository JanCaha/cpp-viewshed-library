#!/usr/bin/make -f

BUILDDIR = build_dir

# secondly called by launchpad
build: export CXX=$(whereis clang++)
	mkdir $(BUILDDIR);
	cmake \
		-B $(BUILDDIR) \
		-G Ninja \
		-D CMAKE_BUILD_TYPE=Release \
		-D CMAKE_INSTALL_PREFIX=debian/tmp/usr \
		-D BUILD_TESTS=OFF \
		-D PACK_DEB=OFF \
		-D BUILD_DOCUMENTATION=OFF
	cmake --build $(BUILDDIR) --config Release --target library_viewshed	
	cmake --build $(BUILDDIR) --config Release --target create_binaries	

# thirdly called by launchpad
binary: binary-indep binary-arch

binary-indep:
	# nothing to be done

binary-arch: build-library build-binaries
 
build-library:
	rm -rf debian/tmp
	cd $(BUILDDIR); cmake -DCOMPONENT=lib -P cmake_install.cmake
	mkdir debian/tmp/DEBIAN
	dpkg-gencontrol -pviewshed
	dpkg --build debian/tmp ..

build-binaries:
	rm -rf debian/tmp
	cd $(BUILDDIR); cmake -DCOMPONENT=bin -P cmake_install.cmake
	mkdir debian/tmp/DEBIAN
	dpkg-gencontrol -pviewshed-bin
	dpkg --build debian/tmp ..


# firstly called by launchpad
clean:
	rm -f build
	rm -rf $(BUILDDIR)

.PHONY: binary binary-arch binary-indep clean